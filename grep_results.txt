1860:   the <span data-x="attr-popover-none-state">no popover state</span>, then run the <span>hide
7987:     <td><dfn data-x="attr-fetchpriority-high-state">high</dfn>
7994:     <td><dfn data-x="attr-fetchpriority-low-state">low</dfn>
8001:     <td><dfn data-x="attr-fetchpriority-auto-state">auto</dfn>
8009:  <span data-x="attr-fetchpriority-auto-state">auto</span> state.</p>
13656:     <td rowspan=2><dfn data-x="attr-translate-yes-state">yes</dfn>
13663:     <td><dfn data-x="attr-translate-no-state">no</dfn>
13669:  data-x="attr-translate-inherit-state">inherit</dfn> state.</p>
13674:  attribute is in the <span data-x="attr-translate-yes-state">yes</span> state, then the element's
13677:  data-x="attr-translate-no-state">no</span> state, then the element's <span>translation mode</span>
13680:  data-x="attr-translate-inherit-state">inherit</span> state, or the element is not an <span
13773:     <td><dfn data-x="attr-dir-ltr-state">ltr</dfn>
13777:     <td><dfn data-x="attr-dir-rtl-state">rtl</dfn>
13781:     <td><dfn data-x="attr-dir-auto-state">auto</dfn>
13788:   <p>The heuristic used by the <span data-x="attr-dir-auto-state">auto</span> state is very crude
13800:  data-x="attr-dir-undefined-state">undefined</dfn> state.</p>
13811:   <dt><span data-x="attr-dir-ltr-state">ltr</span></dt>
13814:   <dt><span data-x="attr-dir-rtl-state">rtl</span></dt>
13817:   <dt><span data-x="attr-dir-auto-state">auto</span></dt>
13830:   <dt><span data-x="attr-dir-undefined-state">undefined</span></dt>
13969:       data-x="attr-dir-undefined-state">undefined</span> state</li>
14043:   data-x="attr-dir">dir</code> attribute is in the <span data-x="attr-dir-auto-state">auto</span>
16044:   data-x="attr-fetchpriority-auto-state">auto</code>)</dt>
29388:  data-x="attr-img-decoding-auto-state">auto</span> state.</p>
30434:     data-x="attr-loading-lazy-state">lazy-loaded</span>. In this case, the <code
31065:  data-x="attr-img-decoding-auto-state">auto</span>, then the user agent is free to choose any
44035:     <td><dfn data-x="attr-th-scope-row-state">row</dfn>
44039:     <td><dfn data-x="attr-th-scope-column-state">column</dfn>
44043:     <td><dfn data-x="attr-th-scope-rowgroup-state">row group</dfn>
44047:     <td><dfn data-x="attr-th-scope-colgroup-state">column group</dfn>
44053:  data-x="attr-th-scope-auto-state">auto</dfn> state. (In this state the header cell applies to a
44057:  the <span data-x="attr-th-scope-rowgroup-state">row group</span> state if the element is not anchored in
44059:  data-x="attr-th-scope-colgroup-state">column group</span> state if the element is not anchored in a
44115:   data-x="attr-th-scope-rowgroup-state">rowgroup</span> state apply to all the cells in their row
44987:   data-x="attr-th-scope-column-state">column</span> state; or</p></li>
44990:   data-x="attr-th-scope-auto-state">auto</span> state, and there are no data cells in any of the
45001:   data-x="attr-th-scope-row-state">row</span> state; or</p></li>
45004:   data-x="attr-th-scope-auto-state">auto</span> state, the cell is not a <span>column
45011:  data-x="attr-th-scope-colgroup-state">column group</span> state.</p>
45015:  data-x="attr-th-scope-rowgroup-state">row group</span> state.</p>
46011:     <td><dfn data-x="attr-form-autocomplete-on-state">on</dfn>
46016:     <td><dfn data-x="attr-form-autocomplete-off-state">off</dfn>
46023:  data-x="attr-form-autocomplete-on-state">on</span> state.</p>
58034:    data-x="attr-form-autocomplete-off-state">off</span> state, then let the element's
64366:     <td><dfn data-x="attr-shadowrootmode-open-state">open</dfn>
64370:     <td><dfn data-x="attr-shadowrootmode-closed-state">closed</dfn>
64377:  data-x="attr-shadowrootmode-none-state">none</dfn> state.</p>
75068:    data-x="attr-popover-none-state">no popover state</span> and whose <span>popover visibility
78983:     <td rowspan=2><dfn data-x="attr-hidden-hidden-state">hidden</dfn>
78989:     <td><dfn data-x="attr-hidden-until-found-state">hidden until found</dfn>
78995:  data-x="attr-hidden-not-hidden-state">not hidden</dfn> state, and its <i data-x="invalid value
78996:  default">invalid value default</i> is the <span data-x="attr-hidden-hidden-state">hidden</span>
79000:  data-x="attr-hidden-hidden-state">hidden</span> state, it indicates that the element is not yet, or
79004:  data-x="attr-hidden-hidden-state">hidden</span> state. This requirement may be implemented
79009:  data-x="attr-hidden-until-found-state">hidden until found</span> state, it indicates that the
79010:  element is hidden like the <span data-x="attr-hidden-hidden-state">hidden</span> state but the
79021:  data-x="attr-hidden-until-found-state">hidden until found</span> state, as specified in the <a
79028:   effects of the <span data-x="attr-hidden-hidden-state">hidden</span> state. Authors therefore
79031:   data-x="attr-hidden-until-found-state">hidden until found</span> state will have 'display: none'
79034:   data-x="attr-hidden-until-found-state">hidden until found</span> elements.</p>
79037:   data-x="attr-hidden-until-found-state">hidden until found</span> state use 'content-visibility:
79039:   data-x="attr-hidden-until-found-state">hidden until found</span> state that make it different
79040:   from the <span data-x="attr-hidden-hidden-state">hidden</span> state:</p>
79045:    data-x="attr-hidden-until-found-state">hidden until found</span> state has a 'display' value of
79049:    the <span data-x="attr-hidden-until-found-state">hidden until found</span> state, which means
79132:   data-x="attr-hidden-until-found-state">hidden until found</span> state, then return "<code
79178:      <span data-x="attr-hidden-until-found-state">hidden until found</span> state, then:</p>
81398:   <span data-x="attr-popover-none-state">no popover state</span>, then return
81413:     the <span data-x="attr-popover-none-state">no popover state</span>, then return
81831:     <td rowspan=2><dfn data-x="attr-contenteditable-true-state">true</dfn>
81838:     <td><dfn data-x="attr-contenteditable-false-state">false</dfn>
81843:     <td><dfn data-x="attr-contenteditable-plaintextonly-state">plaintext-only</dfn>
81850:  data-x="attr-contenteditable-inherit-state">inherit</dfn> state. The inherit state indicates that
81913:    data-x="">false</code>", or "<code data-x="attr-contenteditable-inherit-state">inherit</code>",
81933:  data-x="attr-contenteditable-true-state">true</span> state, "<code
81935:  data-x="attr-contenteditable-plaintextonly-state">plaintext-only</span> state, "<code
81937:  data-x="attr-contenteditable-false-state">false</span> state, and "<code
81938:  data-x="attr-contenteditable-inherit-state">inherit</code>" otherwise. On setting, if the new
82119:     <td rowspan=2><dfn data-x="attr-spellcheck-true-state">true</dfn>
82126:     <td><dfn data-x="attr-spellcheck-false-state">false</dfn>
82132:  data-x="attr-spellcheck-default-state">default</dfn> state. The default state indicates that the
82159:  data-x="attr-spellcheck-true-state">true</span> state, or if the element's <code
82161:  data-x="attr-spellcheck-default-state">default</span> state and the element's <span
82165:  data-x="attr-spellcheck-default-state">default</span> state and the element's <span
82225:   <span data-x="attr-spellcheck-true-state">true</span> state, then checking is enabled; otherwise, if that attribute is in the <span data-x="attr-spellcheck-false-state">false</span>
82232:   data-x="attr-spellcheck-default-state">default</span>
82234:   content attribute is in the <span data-x="attr-spellcheck-true-state">true</span> state, then
82311:     <td rowspan="2"><dfn data-x="attr-writingsuggestions-true-state">true</dfn>
82319:     <td><dfn data-x="attr-writingsuggestions-false-state">false</dfn>
82325:  data-x="attr-writingsuggestions-default-state">default</dfn> state. The default state indicates
82331:  data-x="attr-writingsuggestions-true-state">true</span> state.</p>
82351:   content attribute is in the <span data-x="attr-writingsuggestions-false-state">false</span>
82356:   data-x="attr-writingsuggestions-default-state">default</span> state, <var>element</var> has a
82423:   <span data-x="attr-writingsuggestions-default-state">default</span> and the nearest such
82425:   in the <span data-x="attr-writingsuggestions-false-state">false</span> state, then return
82944:  data-x="attr-hidden-until-found-state">hidden=until-found</code></h4>
82952:  data-x="attr-hidden-until-found-state">hidden until found</span> state should have their <span
82957:  data-x="attr-hidden-until-found-state">hidden until found</span> state should have their contents
85650:     <td><dfn data-x="attr-draggable-true-state">true</dfn>
85655:     <td><dfn data-x="attr-draggable-false-state">false</dfn>
85661:  data-x="attr-draggable-auto-state">auto</dfn> state. The auto state uses the default behavior of
85691:  <span data-x="attr-draggable-true-state">true</span>, the <code
85695:  has the state <span data-x="attr-draggable-false-state">false</span>, the <code
85699:  the state <span data-x="attr-draggable-auto-state">auto</span>. If the element is an
85856:     <td rowspan=2><dfn data-x="attr-popover-auto-state">auto</dfn>
85864:     <td><dfn data-x="attr-popover-manual-state">manual</dfn>
85871:     <td><dfn data-x="attr-popover-hint-state">hint</dfn></td>
85880:  data-x="attr-popover-none-state">no popover</dfn> state, and its <i data-x="invalid value
85881:  default">invalid value default</i> is the <span data-x="attr-popover-manual-state">manual</span>
85940:   data-x="attr-popover-auto-state">auto</span> state, then this will also close all other <span
85941:   data-x="attr-popover-auto-state">auto</span> popovers unless they are an ancestor of
86035:    <p>If <var>originalType</var> is the <span data-x="attr-popover-auto-state">auto</span> state,
86057:    <p>If <var>originalType</var> is the <span data-x="attr-popover-hint-state">hint</span> state,
86097:    <p>If <var>originalType</var> is <span data-x="attr-popover-auto-state">auto</span> or <span
86098:    data-x="attr-popover-hint-state">hint</span>, then:</p>
86200:   data-x="attr-popover-none-state">no popover</span> state, then set <var>element</var>'s
86295:    data-x="attr-popover-auto-state">auto</span> state or the <span
86296:    data-x="attr-popover-hint-state">hint</span> state, then:</p>
86442:   data-x="attr-popover-auto-state">auto</span> state or <var>endpoint</var>'s <code
86444:   data-x="attr-popover-hint-state">hint</span> state.</p></li>
86466:     attribute is in the <span data-x="attr-popover-hint-state">hint</span> state.</p></li>
86572:   data-x="attr-popover-auto-state">auto</span> popovers are considered.</p>
86589:     data-x="attr-popover-none-state">no popover state</span> or the <span
86590:     data-x="attr-popover-manual-state">manual</span> state.</p></li>
86651:       data-x="attr-popover-manual-state">manual</span> or <span
86652:       data-x="attr-popover-none-state">none</span> state.</p></li>
86656:       data-x="attr-popover-hint-state">hint</span> state or <var>candidateAncestor</var>'s <code
86658:       data-x="attr-popover-auto-state">auto</span> state.</p></li>
86695:     the <span data-x="attr-popover-auto-state">auto</span> state and <var>currentNode</var>'s
86761:    data-x="attr-popover-none-state">no popover</span> state, then:</p>
86927:     <td><dfn data-x="attr-popovertargetaction-toggle-state">toggle</dfn>
86932:     <td><dfn data-x="attr-popovertargetaction-show-state">show</dfn>
86937:     <td><dfn data-x="attr-popovertargetaction-hide-state">hide</dfn>
86943:  data-x="attr-popovertargetaction-toggle-state">toggle</span> state.</p>
87045:   the <span data-x="attr-popover-none-state">no popover</span> state, then return null.</p></li>
87054:  data-x="attr-popover-auto-state">auto</span> state will close the popover. This is in addition to
87152:     data-x="attr-popover-auto-state">auto</span> state and <var>targetPopover</var>'s <span>popover
130683:     the <span data-x="attr-shadowrootmode-none-state">none</span> state;</li>
145009:     data-x="attr-hidden-until-found-state">hidden=until-found</code> attribute before they are
